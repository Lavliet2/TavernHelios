services:
  mongoMenuService:
    image: mongo
    container_name: mongoMenuService
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: 'mongoMenuService'
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: reservationdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: helios
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  menuService:
    container_name: menuService
    image: tavernhelios/menuservice 
    build:
      context: .
      dockerfile: ./MenuService/MenuServiceServer/Dockerfile
    ports:
      - '5064:5064'
    depends_on:
      - mongoMenuService
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:5064"  
    command: ["dotnet", "MenuServiceServer.dll"]
    networks:
      - app_network

  ReservationService:
    container_name: ReservationService
    image: tavernhelios/reservationservice 
    build:
      context: .
      dockerfile: ./ReservationService\TavernHelios.ReservationServiceServer/Dockerfile
    ports:
      - '5065:5065'
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:5065"  
    command: ["dotnet", "TavernHelios.ReservationServiceServer.dll"]
    networks:
      - app_network

  server:
    container_name: TavernHelios.Server
    image: tavernhelios/server
    build:
      context: .
      dockerfile: ./TavernHelios.Server/Dockerfile
    ports:
      # - "5000:5000"
      - "5555:5555"
    depends_on:
      - postgres
      - mongoMenuService
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "https://+:5555"
      ASPNETCORE_Kestrel__Certificates__Default__Path: "/https/aspnetapp.pfx"
      ASPNETCORE_Kestrel__Certificates__Default__Password: "helios"
      # VITE_API_URL: "https://localhost:5555"
    volumes:
      - ${USERPROFILE}/.aspnet/https:/https:ro
    command: ["dotnet", "TavernHelios.Server.dll"]
    networks:
      - app_network
  
  postgresAuth:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: helios
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network


  client:
    container_name: tavernhelios.client
    image: tavernhelios/client
    build:
      context: .
      dockerfile: ./tavernhelios.client/Dockerfile
      args:
        NODE_ENV: "development"
        VITE_API_URL: "https://localhost:5555"
    environment:
      NODE_ENV: "development"
      VITE_API_URL: "https://localhost:5555"
    ports:
      - "8888:443"
    depends_on:
      - server
    networks:
      - app_network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      
networks:
  app_network:
    driver: bridge     

volumes:
  mongo_data:
  postgres_data: