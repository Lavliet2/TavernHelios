services:
  redis:
    image: redis:7.2
    container_name: redis-weather
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_weather_data:/data
    networks:
      - app_network

  clickhouse-monitoring:
    image: clickhouse/clickhouse-server:23.8.4.69-alpine
    container_name: clickhouse-monitoring
    ports:
      - 8123:8123
      - 9000:9000
      - 9005:9005
      - 9363:9363
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    volumes:
      - clickhouse_monitoring_data:/data/clickhouse_monitoring_data
      - ./clickhouse-config.xml:/etc/clickhouse-server/config.d/prometheus.xml
    networks:
      - app_network

  rabbitmq-monitoring:
    image: rabbitmq:4-management-alpine
    container_name: rabbitmq-monitoring
    ports:
      - 5672:5672
      - 15672:15672
      - 5552:5552
      - 15692:15692
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbitmq_monitoring_data:/var/lib/rabbitmq
      - rabbitmq_monitoring_plugins:/etc/rabbitmq
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins:ro      
    networks:
      - app_network

  prometheus-monitoring:
    image: prom/prometheus
    container_name: prometheus-monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - clickhouse-monitoring
    networks:
      - app_network

  grafana-monitoring:
    image: grafana/grafana
    container_name: grafana-monitoring
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_monitoring_storage:/var/lib/grafana
    depends_on:
      - prometheus-monitoring
      - clickhouse-monitoring
    networks:
      - app_network

  mongoMenu:
    image: mongo
    container_name: mongoMenu
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: "mongoMenu"
    networks:
      - app_network

  mongoLayout:
    image: mongo
    container_name: mongoLayout
    ports:
      - "27018:27017"
    volumes:
      - mongoLayout_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: "mongoLayout"
    networks:
      - app_network

  postgresReservation:
    image: postgres:17.4
    container_name: postgresReservation
    restart: always
    user: postgres
    ports:
      - "5434:5432"
    environment:
      PGUSER: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: helios
    networks:
      - app_network
    volumes:
      - postgresReservation_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgresAuth:
    image: postgres:17.4
    container_name: postgresAuth
    restart: always
    user: postgres
    ports:
      - "5435:5432"
    environment:
      PGUSER: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: helios
    networks:
      - app_network
    volumes:
      - postgresAuth_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  mongo_data:
  mongoLayout_data:
  postgresReservation_data:
  postgresAuth_data:  
  clickhouse_monitoring_data:
    name: clickhouse_monitoring_data
    driver: local
    driver_opts:
      type: none
      device: C:\Users\Public\db_clickhouse_monitoring
      o: bind
  rabbitmq_monitoring_data:
  rabbitmq_monitoring_plugins:
  grafana_monitoring_storage:
  redis_weather_data:
