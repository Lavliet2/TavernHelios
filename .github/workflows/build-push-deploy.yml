name: Build and Deploy HeliosTavern App

on:
  push:
    tags:
      - 'v*'  

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # –ó–∞–≥—Ä—É–∂–∞–µ–º –í–°–Æ –∏—Å—Ç–æ—Ä–∏—é —Å —Ç–µ–≥–∞–º–∏ –∏ –≤–µ—Ç–∫–∞–º–∏

      # üß™ NUnit —Ç–µ—Å—Ç—ã
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore solution
        run: dotnet restore TavernHelios.sln

      - name: Build solution
        run: dotnet build TavernHelios.sln --no-restore --configuration Debug

      - name: Run tests
        run: dotnet test TavernHelios.sln --no-build --verbosity normal -p:TreatWarningsAsErrors=false -m:4
        
      # üî• –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –≤–µ—Ç–∫—É —Ç–µ–≥–∞
      - name: Determine branch from tag
        id: get-branch
        run: |
          TAG=${{ github.ref_name }}
          echo "üîç Looking for the source branch of tag: $TAG"

          # –ü–æ–ª—É—á–∞–µ–º –∫–æ–º–º–∏—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø—Ä–∏–≤—è–∑–∞–Ω —Ç–µ–≥
          COMMIT_HASH=$(git rev-list -n 1 $TAG)
          echo "üîπ Tag $TAG is at commit: $COMMIT_HASH"

          # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–µ—Ç–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö —ç—Ç–æ—Ç –∫–æ–º–º–∏—Ç
          BRANCH=$(git branch -r --contains $COMMIT_HASH | grep -v 'HEAD' | awk -F'/' '{print $2}' | head -n1)

          if [[ -z "$BRANCH" ]]; then
            echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ç–∫—É, –∏—Å–ø–æ–ª—å–∑—É–µ–º main!"
            BRANCH="main"
          fi

          echo "‚úÖ Found branch: $BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Debug GitHub Tag & Branch
        run: |
          echo "github.ref_name=${{ github.ref_name }}"
          echo "Extracted branch: ${{ env.BRANCH }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # **–°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –±—ç–∫–µ–Ω–¥–æ–º**
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./TavernHelios.Server/Dockerfile
          push: true
          tags: |
            ghcr.io/lavliet2/heliostavern-backend:${{ env.BRANCH }}-${{ github.ref_name }}
            ghcr.io/lavliet2/heliostavern-backend:latest 
          
      - name: Export version to .env.production
        run: echo "VITE_APP_VERSION=${GITHUB_REF_NAME#v}" > ./tavernhelios.client/.env.production

      # **–°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º**
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./tavernhelios.client/Dockerfile
          push: true
          tags: |
            ghcr.io/lavliet2/heliostavern-frontend:${{ env.BRANCH }}-${{ github.ref_name }}
            ghcr.io/lavliet2/heliostavern-frontend:latest

      # **–°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å MenuService**
      - name: Build and push MenuService image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./MenuService/MenuServiceServer/Dockerfile
          push: true
          tags: |
            ghcr.io/lavliet2/menuservice:${{ env.BRANCH }}-${{ github.ref_name }}
            ghcr.io/lavliet2/menuservice:latest

      # **–°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å ReservationService**
      - name: Build and push ReservationService image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./ReservationService/TavernHelios.ReservationServiceServer/Dockerfile
          push: true
          tags: |
            ghcr.io/lavliet2/reservationservice:${{ env.BRANCH }}-${{ github.ref_name }}
            ghcr.io/lavliet2/reservationservice:latest
            
      # **–°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å layoutservice**
      - name: Build and push layoutservice image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./LayoutService/TavernHelios.LayoutService.LayoutServiceServer/Dockerfile
          
          push: true
          tags: |
            ghcr.io/lavliet2/layoutservice:${{ env.BRANCH }}-${{ github.ref_name }}
            ghcr.io/lavliet2/layoutservice:latest                

      # **–°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å authservice**
      - name: Build and push authservice image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./TavernHelios.Auth/Dockerfile
          
          push: true
          tags: |
            ghcr.io/lavliet2/authservice:${{ env.BRANCH }}-${{ github.ref_name }}
            ghcr.io/lavliet2/authservice:latest       

      # **–°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å AdminService**
      - name: Build and push AdminService image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./AdministrationService/TavernHelios.AdministrationService.AdministrationServiceServer/Dockerfile
          push: true
          tags: |
            ghcr.io/lavliet2/adminservice:${{ env.BRANCH }}-${{ github.ref_name }}
            ghcr.io/lavliet2/adminservice:latest

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
                      
      - name: Deploy to Kubernetes via SSH
        env:
          DEPLOY_BRANCH: ${{ env.BRANCH }}
        run: |
          echo "::group::üöÄ Start remote deploy over SSH"

          ssh -tt -o StrictHostKeyChecking=no -p 2222 lavliet@178.72.83.217 << EOF
          set -e

          echo "üöÄ Deploying from branch: $DEPLOY_BRANCH"
          if [[ -z "$DEPLOY_BRANCH" ]]; then
            echo "‚ö†Ô∏è  BRANCH not set, defaulting to main"
            DEPLOY_BRANCH="main"
          fi

          rm -rf /home/lavliet/heliostavern-app
          echo "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º –≤–µ—Ç–∫—É: $DEPLOY_BRANCH"
          git clone --branch "$DEPLOY_BRANCH" --depth 1 https://github.com/Lavliet2/TavernHelios.git /home/lavliet/heliostavern-app
          cd /home/lavliet/heliostavern-app || exit 1

          echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π..."

          kubectl apply -f .k8s/tavernhelios-ingress.yaml
          kubectl apply -f .k8s/mongoMenuService-deployment.yaml
          kubectl apply -f .k8s/mongoLayoutService-deployment.yaml
          kubectl apply -f .k8s/postgresReservation-deployment.yaml
          kubectl apply -f .k8s/postgresAuth-deployment.yaml
          kubectl apply -f .k8s/clickhouse-monitoring-deployment.yaml
          kubectl apply -f .k8s/rabbitmq-monitoring-deployment.yaml
          kubectl apply -f .k8s/prometheus-monitoring-deployment.yaml
          kubectl apply -f .k8s/grafana-monitoring-deployment.yaml

          kubectl apply -f .k8s/menuService-deployment.yaml
          kubectl apply -f .k8s/reservationService-deployment.yaml
          kubectl apply -f .k8s/layoutService-deployment.yaml
          kubectl apply -f .k8s/authService-deployment.yaml
          kubectl apply -f .k8s/adminService-deployment.yaml
          kubectl apply -f .k8s/tavernhelios-server-deployment.yaml
          kubectl apply -f .k8s/tavernhelios-client-deployment.yaml

          echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–¥—ã..."
          kubectl rollout restart deployment menuservice
          kubectl rollout restart deployment reservationservice
          kubectl rollout restart deployment layoutservice
          kubectl rollout restart deployment authservice
          kubectl rollout restart deployment adminservice
          kubectl rollout restart deployment tavernhelios-server
          kubectl rollout restart deployment tavernhelios-client

          echo "‚úÖ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!"
          EOF

          RETVAL=$?
          echo "::endgroup::"

          if [ $RETVAL -ne 0 ]; then
            echo "::error::‚ùå SSH –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π $RETVAL"
            exit $RETVAL
          else
            echo "::notice::‚úÖ SSH –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ"
          fi
