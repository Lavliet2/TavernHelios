apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-monitoring
  template:
    metadata:
      labels:
        app: rabbitmq-monitoring
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:4-management-alpine
          ports:
            - containerPort: 5672   # AMQP порт
            - containerPort: 15672  # Web UI
            - containerPort: 5552   # STOMP порт
            - containerPort: 15692  # Prometheus metrics
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "admin"
            - name: RABBITMQ_DEFAULT_PASS
              value: "admin"
          volumeMounts:
            - name: rabbitmq-storage
              mountPath: /var/lib/rabbitmq
            - name: rabbitmq-plugins
              mountPath: /etc/rabbitmq/enabled_plugins
              subPath: enabled_plugins
      volumes:
        - name: rabbitmq-storage
          persistentVolumeClaim:
            claimName: rabbitmq-monitoring-pvc
        - name: rabbitmq-plugins
          configMap:
            name: rabbitmq-plugins-config

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-monitoring
spec:
  selector:
    app: rabbitmq-monitoring
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
      nodePort: 32055
    - name: web-ui
      port: 15672
      targetPort: 15672
      nodePort: 32054
    - name: stomp
      port: 5552
      targetPort: 5552
      nodePort: 32056      
    - name: prometheus
      port: 15692
      targetPort: 15692
      nodePort: 32057      
  type: NodePort

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-plugins-config
data:
  enabled_plugins: |
    [rabbitmq_management,rabbitmq_prometheus].

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-monitoring-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
