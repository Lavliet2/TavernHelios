services:
  mongoMenuService:
    image: mongo
    container_name: mongoMenuService
    ports:
      - '27017:27017'
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: 'mongoMenuService'
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: reservationdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: helios
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  menuService:
    container_name: menuService
    image: tavernhelios/menuservice 
    build:
      context: .
      dockerfile: ./MenuService/MenuServiceServer/Dockerfile
    ports:
      - '5064:5064'
    depends_on:
      - mongoMenuService
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:5064"  
    command: ["dotnet", "MenuServiceServer.dll"]
    networks:
      - app_network

  ReservationService:
    container_name: ReservationService
    image: tavernhelios/reservationservice 
    build:
      context: .
      dockerfile: ./ReservationService\TavernHelios.ReservationServiceServer/Dockerfile
    ports:
      - '5065:5065'
    depends_on:
      - postgres
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:5065"  
    command: ["dotnet", "TavernHelios.ReservationServiceServer.dll"]
    networks:
      - app_network
      

networks:
  app_network:
    driver: bridge     

volumes:
  mongo_data:
  postgres_data: